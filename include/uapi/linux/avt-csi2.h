// SPDX-License-Identifier: GPL-2.0-or-later
/* 
 * Allied Vision Alvium camera driver
 * 
 * Copyright (C) 2024 Allied Vision Technologies GmbH
 */


#ifndef LINUX_AVT_CSI_H
#define LINUX_AVT_CSI_H

#include <linux/videodev2.h>

// TODO: Maybe define a more suitable base address like e.g. 0xf000
#define AVT_CID_CAMERA_BASE V4L2_CID_CAMERA_CLASS_BASE + 40

#define AVT_CID_EXPOSURE_AUTO_MIN		 (AVT_CID_CAMERA_BASE + 0)
#define AVT_CID_EXPOSURE_AUTO_MAX		 (AVT_CID_CAMERA_BASE + 1)
#define AVT_CID_GAIN_AUTO_MIN			 (AVT_CID_CAMERA_BASE + 2)
#define AVT_CID_GAIN_AUTO_MAX			 (AVT_CID_CAMERA_BASE + 3)
#define AVT_CID_EXPOSURE_ACTIVE_LINE_MODE	 (AVT_CID_CAMERA_BASE + 4)
#define AVT_CID_EXPOSURE_ACTIVE_LINE_SELECTOR	 (AVT_CID_CAMERA_BASE + 5)
enum avt_exposure_active_line {
	AVT_EXPOSURE_ACTIVE_LINE0 = 0,
	AVT_EXPOSURE_ACTIVE_LINE1 = 1,
	AVT_EXPOSURE_ACTIVE_LINE2 = 2,
	AVT_EXPOSURE_ACTIVE_LINE3 = 3,
};
#define AVT_CID_EXPOSURE_ACTIVE_INVERT		 (AVT_CID_CAMERA_BASE + 6)
#define AVT_CID_TRIGGER_MODE			 (AVT_CID_CAMERA_BASE + 7)
#define AVT_CID_TRIGGER_ACTIVATION		 (AVT_CID_CAMERA_BASE + 8)
enum avt_trigger_activation {
	AVT_TRIGGER_ACTIVATION_RISING_EDGE	= 0,
	AVT_TRIGGER_ACTIVATION_FALLING_EDGE	= 1,
	AVT_TRIGGER_ACTIVATION_ANY_EDGE		= 2,
	AVT_TRIGGER_ACTIVATION_LEVEL_HIGH	= 3,
	AVT_TRIGGER_ACTIVATION_LEVEL_LOW	= 4,
};
#define AVT_CID_TRIGGER_SOURCE			 (AVT_CID_CAMERA_BASE + 9)
enum avt_trigger_source {
	AVT_TRIGGER_SOURCE_LINE0 	= 0,
	AVT_TRIGGER_SOURCE_LINE1 	= 1,
	AVT_TRIGGER_SOURCE_LINE2 	= 2,
	AVT_TRIGGER_SOURCE_LINE3 	= 3,
	AVT_TRIGGER_SOURCE_SOFTWARE 	= 4,
};
#define AVT_CID_TRIGGER_SOFTWARE		 (AVT_CID_CAMERA_BASE + 10)
#define AVT_CID_DEVICE_TEMPERATURE		 (AVT_CID_CAMERA_BASE + 11)
#define AVT_CID_BINNING_MODE			 (AVT_CID_CAMERA_BASE + 12)
enum avt_binning_mode {
	AVT_BINNING_MODE_AVG = 0,
	AVT_BINNING_MODE_SUM = 1,
};
#define AVT_CID_BINNING_SETTING			 (AVT_CID_CAMERA_BASE + 13)
#define AVT_CID_FIRMWARE_VERSION		 (AVT_CID_CAMERA_BASE + 14)
#define AVT_CID_CAMERA_NAME			 (AVT_CID_CAMERA_BASE + 15)
#define AVT_CID_SERIAL_NUMBER			 (AVT_CID_CAMERA_BASE + 16)
#define AVT_CID_ACQUISITION_STATUS		 (AVT_CID_CAMERA_BASE + 17)
#define AVT_CID_BINNING_SELECTOR		 (AVT_CID_CAMERA_BASE + 18)
enum avt_binning_selector {
	AVT_BINNING_DIGITAL = 0,
	AVT_BINNING_SENSOR  = 1,
};
#define AVT_CID_INTENSITY_AUTO_PRECEDENCE	 (AVT_CID_CAMERA_BASE + 19)
enum avt_intensity_auto_precedence {
	AVT_INTENSITY_AUTO_PRECEDENCE_MINIMIZE_NOISE	= 0,
	AVT_INTENSITY_AUTO_PRECEDENCE_MINIMIZE_BLUR	= 1,
	AVT_INTENSITY_AUTO_PRECEDENCE_MAXIMIZE_DOF	= 2,
};
#define AVT_CID_INTENSITY_AUTO_PRECEDENCE_TARGET (AVT_CID_CAMERA_BASE + 20)
#define AVT_CID_TEST_PATTERN			 (AVT_CID_CAMERA_BASE + 21)
enum avt_test_pattern {
	AVT_TEST_PATTERN_OFF			= 0,
	AVT_TEST_PATTERN_BLACK			= 1,
	AVT_TEST_PATTERN_WHITE			= 2,
	AVT_TEST_PATTERN_GREY			= 3,
	AVT_TEST_PATTERN_RED			= 4,
	AVT_TEST_PATTERN_GREEN			= 5,
	AVT_TEST_PATTERN_BLUE			= 6,
	AVT_TEST_PATTERN_COLOR_HBAR		= 7,
	AVT_TEST_PATTERN_COLOR_VBAR		= 8,
	AVT_TEST_PATTERN_COLOR_VBAR_FADE_GREY	= 9,
	AVT_TEST_PATTERN_GREY_ALT_STRIPE	= 10,
	AVT_TEST_PATTERN_GREY_ALT_PIXEL		= 11,
	AVT_TEST_PATTERN_GREY_VBAR1		= 12,
	AVT_TEST_PATTERN_GREY_VBAR2		= 13,
	AVT_TEST_PATTERN_GREY_HRAMP		= 14,
	AVT_TEST_PATTERN_GREY_DRAMP		= 15,
	AVT_TEST_PATTERN_GREY_DRAMP_MOVING	= 16,
};
#define AVT_CID_DO_AUTO_EXPOSURE		 (AVT_CID_CAMERA_BASE + 22)

struct avt_i2c_xfer {
    u16 addr;
    u16 len;
    u8  rd;
    u8  reserved[3];
} __packed;

#endif /* LINUX_AVT_CSI_H */
